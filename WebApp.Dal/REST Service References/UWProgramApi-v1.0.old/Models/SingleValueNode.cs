// <autogenerated>By AutoRest</autogenerated>

namespace UWProgramApi.v1_0.Models
{
    using System.Linq;

    public partial class SingleValueNode
    {
        /// <summary>
        /// Initializes a new instance of the SingleValueNode class.
        /// </summary>
        public SingleValueNode() { }

        /// <summary>
        /// Initializes a new instance of the SingleValueNode class.
        /// </summary>
        /// <param name="kind">Possible values include: 'None', 'Constant',
        /// 'Convert', 'NonentityRangeVariableReference', 'BinaryOperator',
        /// 'UnaryOperator', 'SingleValuePropertyAccess',
        /// 'CollectionPropertyAccess', 'SingleValueFunctionCall', 'Any',
        /// 'CollectionNavigationNode', 'SingleNavigationNode',
        /// 'SingleValueOpenPropertyAccess', 'SingleEntityCast', 'All',
        /// 'EntityCollectionCast', 'EntityRangeVariableReference',
        /// 'SingleEntityFunctionCall', 'CollectionFunctionCall',
        /// 'EntityCollectionFunctionCall', 'NamedFunctionParameter',
        /// 'ParameterAlias', 'EntitySet', 'KeyLookup', 'SearchTerm',
        /// 'CollectionOpenPropertyAccess', 'CollectionPropertyCast',
        /// 'SingleValueCast', 'CollectionCount'</param>
        public SingleValueNode(IEdmTypeReference typeReference = default(IEdmTypeReference), string kind = default(string))
        {
            TypeReference = typeReference;
            Kind = kind;
        }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "TypeReference")]
        public IEdmTypeReference TypeReference { get; private set; }

        /// <summary>
        /// Gets possible values include: 'None', 'Constant', 'Convert',
        /// 'NonentityRangeVariableReference', 'BinaryOperator',
        /// 'UnaryOperator', 'SingleValuePropertyAccess',
        /// 'CollectionPropertyAccess', 'SingleValueFunctionCall', 'Any',
        /// 'CollectionNavigationNode', 'SingleNavigationNode',
        /// 'SingleValueOpenPropertyAccess', 'SingleEntityCast', 'All',
        /// 'EntityCollectionCast', 'EntityRangeVariableReference',
        /// 'SingleEntityFunctionCall', 'CollectionFunctionCall',
        /// 'EntityCollectionFunctionCall', 'NamedFunctionParameter',
        /// 'ParameterAlias', 'EntitySet', 'KeyLookup', 'SearchTerm',
        /// 'CollectionOpenPropertyAccess', 'CollectionPropertyCast',
        /// 'SingleValueCast', 'CollectionCount'
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "Kind")]
        public string Kind { get; private set; }

    }
}

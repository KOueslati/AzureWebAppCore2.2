// <autogenerated>By AutoRest</autogenerated>

namespace UWProgramApi.v1_0.Models
{
    using System.Linq;

    public partial class IEdmTerm
    {
        /// <summary>
        /// Initializes a new instance of the IEdmTerm class.
        /// </summary>
        public IEdmTerm() { }

        /// <summary>
        /// Initializes a new instance of the IEdmTerm class.
        /// </summary>
        /// <param name="termKind">Possible values include: 'None', 'Type',
        /// 'Value'</param>
        /// <param name="schemaElementKind">Possible values include: 'None',
        /// 'TypeDefinition', 'ValueTerm', 'Action', 'EntityContainer',
        /// 'Function'</param>
        public IEdmTerm(string termKind = default(string), string schemaElementKind = default(string), string namespaceProperty = default(string), string name = default(string))
        {
            TermKind = termKind;
            SchemaElementKind = schemaElementKind;
            NamespaceProperty = namespaceProperty;
            Name = name;
        }

        /// <summary>
        /// Gets possible values include: 'None', 'Type', 'Value'
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "TermKind")]
        public string TermKind { get; private set; }

        /// <summary>
        /// Gets possible values include: 'None', 'TypeDefinition',
        /// 'ValueTerm', 'Action', 'EntityContainer', 'Function'
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "SchemaElementKind")]
        public string SchemaElementKind { get; private set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "Namespace")]
        public string NamespaceProperty { get; private set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "Name")]
        public string Name { get; private set; }

    }
}

// <autogenerated>By AutoRest</autogenerated>

namespace UWProgramApi.v1_0.Models
{
    using System.Linq;

    public partial class IEdmStructuredType
    {
        /// <summary>
        /// Initializes a new instance of the IEdmStructuredType class.
        /// </summary>
        public IEdmStructuredType() { }

        /// <summary>
        /// Initializes a new instance of the IEdmStructuredType class.
        /// </summary>
        /// <param name="typeKind">Possible values include: 'None',
        /// 'Primitive', 'Entity', 'Complex', 'Collection',
        /// 'EntityReference', 'Enum', 'TypeDefinition'</param>
        public IEdmStructuredType(bool? isAbstract = default(bool?), bool? isOpen = default(bool?), IEdmStructuredType baseType = default(IEdmStructuredType), System.Collections.Generic.IList<IEdmProperty> declaredProperties = default(System.Collections.Generic.IList<IEdmProperty>), string typeKind = default(string))
        {
            IsAbstract = isAbstract;
            IsOpen = isOpen;
            BaseType = baseType;
            DeclaredProperties = declaredProperties;
            TypeKind = typeKind;
        }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "IsAbstract")]
        public bool? IsAbstract { get; private set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "IsOpen")]
        public bool? IsOpen { get; private set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "BaseType")]
        public IEdmStructuredType BaseType { get; private set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "DeclaredProperties")]
        public System.Collections.Generic.IList<IEdmProperty> DeclaredProperties { get; private set; }

        /// <summary>
        /// Gets possible values include: 'None', 'Primitive', 'Entity',
        /// 'Complex', 'Collection', 'EntityReference', 'Enum',
        /// 'TypeDefinition'
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "TypeKind")]
        public string TypeKind { get; private set; }

    }
}

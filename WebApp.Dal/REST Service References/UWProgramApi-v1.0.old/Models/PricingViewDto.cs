// <autogenerated>By AutoRest</autogenerated>

namespace UWProgramApi.v1_0.Models
{
    using System.Linq;

    public partial class PricingViewDto
    {
        /// <summary>
        /// Initializes a new instance of the PricingViewDto class.
        /// </summary>
        public PricingViewDto() { }

        /// <summary>
        /// Initializes a new instance of the PricingViewDto class.
        /// </summary>
        public PricingViewDto(int? underwritingProgramId = default(int?), int? riskObjectId = default(int?), int? perilId = default(int?), int? termsAndConditionsId = default(int?), int? indemnityTypeId = default(int?), int? deductionBasis = default(int?), int? deductionUnit = default(int?), double? deductionValue = default(double?), int? limitBasis = default(int?), int? limitUnit = default(int?), double? limitValue = default(double?), int? termsAndConditionsSpecificId = default(int?), int? termsAndConditionsSpecificBase = default(int?), int? termsAndConditionsSpecificDeductibleUnit = default(int?), double? termsAndConditionsSpecificDeductibleValue = default(double?), int? termsAndConditionsSpecificLimitUnit = default(int?), double? termsAndConditionsSpecificLimitValue = default(double?), int? deductibleBaseToUse = default(int?), int? limitBaseToUse = default(int?), int? deductibleUnitToUse = default(int?), int? limitUnitToUse = default(int?), double? deductibleValueToUse = default(double?), double? limitValueToUse = default(double?), string ruleName = default(string))
        {
            UnderwritingProgramId = underwritingProgramId;
            RiskObjectId = riskObjectId;
            PerilId = perilId;
            TermsAndConditionsId = termsAndConditionsId;
            IndemnityTypeId = indemnityTypeId;
            DeductionBasis = deductionBasis;
            DeductionUnit = deductionUnit;
            DeductionValue = deductionValue;
            LimitBasis = limitBasis;
            LimitUnit = limitUnit;
            LimitValue = limitValue;
            TermsAndConditionsSpecificId = termsAndConditionsSpecificId;
            TermsAndConditionsSpecificBase = termsAndConditionsSpecificBase;
            TermsAndConditionsSpecificDeductibleUnit = termsAndConditionsSpecificDeductibleUnit;
            TermsAndConditionsSpecificDeductibleValue = termsAndConditionsSpecificDeductibleValue;
            TermsAndConditionsSpecificLimitUnit = termsAndConditionsSpecificLimitUnit;
            TermsAndConditionsSpecificLimitValue = termsAndConditionsSpecificLimitValue;
            DeductibleBaseToUse = deductibleBaseToUse;
            LimitBaseToUse = limitBaseToUse;
            DeductibleUnitToUse = deductibleUnitToUse;
            LimitUnitToUse = limitUnitToUse;
            DeductibleValueToUse = deductibleValueToUse;
            LimitValueToUse = limitValueToUse;
            RuleName = ruleName;
        }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "UnderwritingProgramId")]
        public int? UnderwritingProgramId { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "RiskObjectId")]
        public int? RiskObjectId { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "PerilId")]
        public int? PerilId { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "TermsAndConditionsId")]
        public int? TermsAndConditionsId { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "IndemnityTypeId")]
        public int? IndemnityTypeId { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "DeductionBasis")]
        public int? DeductionBasis { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "DeductionUnit")]
        public int? DeductionUnit { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "DeductionValue")]
        public double? DeductionValue { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "LimitBasis")]
        public int? LimitBasis { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "LimitUnit")]
        public int? LimitUnit { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "LimitValue")]
        public double? LimitValue { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "TermsAndConditionsSpecificId")]
        public int? TermsAndConditionsSpecificId { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "TermsAndConditionsSpecificBase")]
        public int? TermsAndConditionsSpecificBase { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "TermsAndConditionsSpecificDeductibleUnit")]
        public int? TermsAndConditionsSpecificDeductibleUnit { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "TermsAndConditionsSpecificDeductibleValue")]
        public double? TermsAndConditionsSpecificDeductibleValue { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "TermsAndConditionsSpecificLimitUnit")]
        public int? TermsAndConditionsSpecificLimitUnit { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "TermsAndConditionsSpecificLimitValue")]
        public double? TermsAndConditionsSpecificLimitValue { get; set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "DeductibleBaseToUse")]
        public int? DeductibleBaseToUse { get; private set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "LimitBaseToUse")]
        public int? LimitBaseToUse { get; private set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "DeductibleUnitToUse")]
        public int? DeductibleUnitToUse { get; private set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "LimitUnitToUse")]
        public int? LimitUnitToUse { get; private set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "DeductibleValueToUse")]
        public double? DeductibleValueToUse { get; private set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "LimitValueToUse")]
        public double? LimitValueToUse { get; private set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "RuleName")]
        public string RuleName { get; set; }

    }
}

// <autogenerated>By AutoRest</autogenerated>

namespace UWProgramApi.v1_0.Models
{
    using System.Linq;

    public partial class IEdmStructuralProperty
    {
        /// <summary>
        /// Initializes a new instance of the IEdmStructuralProperty class.
        /// </summary>
        public IEdmStructuralProperty() { }

        /// <summary>
        /// Initializes a new instance of the IEdmStructuralProperty class.
        /// </summary>
        /// <param name="concurrencyMode">Possible values include: 'None',
        /// 'Fixed'</param>
        /// <param name="propertyKind">Possible values include: 'None',
        /// 'Structural', 'Navigation'</param>
        public IEdmStructuralProperty(string defaultValueString = default(string), string concurrencyMode = default(string), string propertyKind = default(string), IEdmTypeReference type = default(IEdmTypeReference), IEdmStructuredType declaringType = default(IEdmStructuredType), string name = default(string))
        {
            DefaultValueString = defaultValueString;
            ConcurrencyMode = concurrencyMode;
            PropertyKind = propertyKind;
            Type = type;
            DeclaringType = declaringType;
            Name = name;
        }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "DefaultValueString")]
        public string DefaultValueString { get; private set; }

        /// <summary>
        /// Gets possible values include: 'None', 'Fixed'
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "ConcurrencyMode")]
        public string ConcurrencyMode { get; private set; }

        /// <summary>
        /// Gets possible values include: 'None', 'Structural', 'Navigation'
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "PropertyKind")]
        public string PropertyKind { get; private set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "Type")]
        public IEdmTypeReference Type { get; private set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "DeclaringType")]
        public IEdmStructuredType DeclaringType { get; private set; }

        /// <summary>
        /// </summary>
        [Newtonsoft.Json.JsonProperty(PropertyName = "Name")]
        public string Name { get; private set; }

    }
}
